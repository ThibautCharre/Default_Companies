import logging

from bpi_fr_algo_credit_scoring.conf import DATA_ROOT
from bpi_fr_algo_credit_scoring.reader import read_yearly_data, read_new_companies_data
from bpi_fr_algo_credit_scoring.feature_engineering import feature_engineering
from bpi_fr_algo_credit_scoring.model import model_prob_default_prediction

logger = logging.getLogger(__name__)


def run():
    logger.info("Start of the RUN task")
    default_risk_dataset = read_yearly_data(path=DATA_ROOT, default_year=1)
    default_risk_dataset_cleaned = feature_engineering(
        default_risk_dataset=default_risk_dataset,
        to_drop_feat=[
            "(current assets - inventories) / long - term liabilities",
            "sales(n) / sales(n - 1)",
            "total liabilities / total assets",
            "(gross profit + depreciation) / sales",
            "gross profit / sales",
            "(inventory * 365) / sales",
            "net profit / sales",
            "(total liabilities - cash) / sales",
            "(gross profit + interest) / sales",
            "constant capital / total assets",
            "profit on sales / sales",
            "profit on operating activities / sales",
            "rotation receivables + inventory turnover in days",
            "(receivables * 365) / sales",
            "net profit / inventory",
            "EBITDA(profit on operating activities - depreciation) / sales",
            "(sales - cost of products sold) / sales",
        ],
        to_drop_companies=[
            5395,
            1900,
            5334,
            279,
            1232,
            75,
            4472,
            644,
            5787,
            5986,
            3908,
            2434,
            4422,
            2499,
            4516,
            1815,
            1814,
            1677,
            1715,
            5913,
            4556,
            6293,
            2616,
            2259,
            6182,
            177,
            6950,
            238,
            1411,
            5600,
            82,
            5283,
            7005,
            1417,
            5914,
            6769,
            267,
            3261,
            4605,
            2679,
            5432,
            309,
            5490,
            1919,
            1850,
            3134,
            4530,
            6844,
            6921,
            307,
            3680,
            4169,
            5438,
            6075,
            2486,
            6684,
            4911,
            2357,
            3898,
            6346,
            6683,
            5223,
            6102,
            1155,
            2939,
            1179,
            1412,
            3455,
            171,
            2887,
            5811,
            4463,
            222,
            3332,
            2202,
            6922,
            2835,
            3592,
            2930,
            2932,
            2305,
            6812,
            2938,
            2615,
            165,
            6160,
            2881,
            2649,
            1237,
            1178,
            6867,
            1554,
            1664,
            4540,
            1713,
            1749,
            3394,
            7000,
            4131,
            325,
            560,
            6758,
            4027,
            6851,
            3770,
        ],
    )
    new_company_dataset = read_new_companies_data(
        path=DATA_ROOT,
        name_file="new_comp_data.csv",
        to_drop_feat=[
            "(current assets - inventories) / long - term liabilities",
            "sales(n) / sales(n - 1)",
            "total liabilities / total assets",
            "(gross profit + depreciation) / sales",
            "gross profit / sales",
            "(inventory * 365) / sales",
            "net profit / sales",
            "(total liabilities - cash) / sales",
            "(gross profit + interest) / sales",
            "constant capital / total assets",
            "profit on sales / sales",
            "profit on operating activities / sales",
            "rotation receivables + inventory turnover in days",
            "(receivables * 365) / sales",
            "net profit / inventory",
            "EBITDA(profit on operating activities - depreciation) / sales",
            "(sales - cost of products sold) / sales",
        ],
    )
    probability_default = model_prob_default_prediction(
        training_dataset=default_risk_dataset_cleaned,
        y_label="Default",
        new_company_features=new_company_dataset,
    )
    logger.info("Calculations are done !")
    return probability_default
